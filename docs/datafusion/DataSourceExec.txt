Struct DataSourceExec
Settings
Help
Source

pub struct DataSourceExec { /* private fields */ }

ExecutionPlan handles different file formats like JSON, CSV, AVRO, ARROW, PARQUET

DataSourceExec implements common functionality such as applying projections, and caching plan properties.

The DataSource trait describes where to find the data for this data source (for example what files or what in memory partitions). Format specifics are implemented with the FileSource trait.
Implementations
Source
impl DataSourceExec
Source
pub fn from_data_source(
    data_source: impl DataSource + 'static,
) -> Arc<DataSourceExec>
Source
pub fn new(data_source: Arc<dyn DataSource>) -> DataSourceExec
Source
pub fn data_source(&self) -> &Arc<dyn DataSource>

Return the source object
Source
pub fn with_data_source(
    self,
    data_source: Arc<dyn DataSource>,
) -> DataSourceExec
Source
pub fn with_constraints(self, constraints: Constraints) -> DataSourceExec

Assign constraints
Source
pub fn with_partitioning(self, partitioning: Partitioning) -> DataSourceExec

Assign output partitioning
Source
pub fn downcast_to_file_source<T>(&self) -> Option<(&FileScanConfig, &T)>
where
    T: 'static,

Downcast the DataSourceExecâ€™s data_source to a specific file source

Returns None if

    the datasource is not scanning files (FileScanConfig)
    The FileScanConfig::file_source is not of type T
