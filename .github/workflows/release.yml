# .github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:  # Allow manual triggering

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        include:
          # Add macOS ARM64 build
          - os: macos-latest
            python-version: "3.10"
            target: aarch64-apple-darwin
            args: --target aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get all history for versioning

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Install Rust toolchain
      - name: Install Rust toolchain
        if: matrix.target != ''
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
          
      # Install default Rust toolchain for non-cross-compile builds
      - name: Install default Rust toolchain
        if: matrix.target == ''
        uses: dtolnay/rust-toolchain@stable

      # Install Linux dependencies
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            fontconfig \
            libfontconfig1-dev \
            libfreetype6-dev

      # Install macOS dependencies
      - name: Install macOS dependencies
        if: runner.os == 'macOS'
        run: |
          brew install fontconfig freetype

      # Add debugging step to check directories
      - name: Debug directory structure - Unix
        if: runner.os != 'Windows'
        run: |
          echo "Current directory: $(pwd)"
          echo "Contents of crates directory:"
          ls -la crates/
          echo "Contents of crates/ids directory:"
          ls -la crates/ids/
          echo "Contents of crates/ids/src directory:"
          ls -la crates/ids/src/
          
      # Add debugging step for Windows
      - name: Debug directory structure - Windows
        if: runner.os == 'Windows'
        run: |
          echo "Current directory: $PWD"
          echo "Contents of crates directory:"
          dir crates
          echo "Contents of crates/ids directory:"
          dir crates\ids
          echo "Contents of crates/ids/src directory:"
          dir crates\ids\src

      # Set up macOS ARM64 cross-compilation
      - name: Set up macOS ARM64 cross-compile
        if: matrix.target == 'aarch64-apple-darwin'
        run: |
          echo "DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer" >> $GITHUB_ENV
          echo "SDKROOT=$(xcrun -sdk macosx --show-sdk-path)" >> $GITHUB_ENV
          echo "MACOSX_DEPLOYMENT_TARGET=11.0" >> $GITHUB_ENV

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release --out dist -b bin ${{ matrix.args || '' }}
          working-directory: ./crates/ids

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}${{ matrix.target && '-aarch64' || '' }}
          path: ./crates/ids/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build_wheels
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Prepare wheels for upload
        run: |
          mkdir -p wheels
          find dist -name "*.whl" -exec cp {} wheels/ \;
          ls -la wheels/

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing wheels/*.whl

      - name: Create GitHub Release with wheels
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: wheels/*.whl